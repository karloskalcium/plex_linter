[project]
name = "plex_linter"
version = "1.1.0"
description = "Checks the plex database for duplicates and mismatches of artists, albums, and tracks"
authors = [{ name = "karloskalcium" }]
requires-python = "~=3.13"
readme = "README.md"
license = "MIT"
dependencies = [
    "line-profiler>=4.2.0",
    "mutagen>=1.47.0,<2",
    "plexapi>=4.15.12,<5",
    "requests>=2.31.0,<3",
    "rich>=13.7.1,<14",
    "tomlkit>=0.12.4,<0.13",
    "typer>=0.12.3,<0.13",
]

[project.urls]
Repository = "https://github.com/karloskalcium/plex_linter"

[project.scripts]
plex_linter = "plex_linter.plex_linter:main"

[dependency-groups]
dev = [
    "pyright>=1.1.401",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.11",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
include = ["plex_linter"]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.13"
pythonPlatform = "All"

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    # flake8-comprehensions
    "C4",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-pytest
    "PT",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.coverage.run]
branch = true
source = [
    "plex_linter",
]
omit = [
    "**/tests/*",
    "**/test_*",
    "**/conftest*",
    "**/__init__.py",
    "**/__main__.py",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
ignore_errors = true

[tool.coverage.html]
directory = "results/coverage"

[tool.pytest.ini_options]
# Show extra test summary info as specified by chars (a)ll except passed
# Output test results to junit.xml
addopts = "-vvv --tb=long -ra --junitxml=results/unit/pytest-unit.xml --color=yes"
testpaths = "tests"
